<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="3.5" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--=====================================================================
      Begin CciSharp 
  ======================================================================-->
  <!-- 
  
  This target hooks the ccs compiler into the build process. 
  The generator runs on the product after the build is complete. 

  Properties project/configuration level:
  
    - CcsPath: path to the ccs.exe seop
    - CcsRewriting : boolean, turns on the task
    - CcsVerify: runs peverify before and after

  Items project /configuration level:
  
    - CcsMutatorAssemblies: list of assemblies containing mutators
    
  By default, ccs loads the mutator assemblies from the following folders
  (mutator assemblies must be named 'CciSharp.....dll'):
      - $(ProjectDir)\CciSharp\
      - $(SolutionDir)\CciSharp\
      - $(CcsMutator) if defined
-->

  <!--== Multiple Import Guard -->
  <PropertyGroup>
    <CcsImported>true</CcsImported>
  </PropertyGroup>

  <PropertyGroup Condition="$(CcsRewriting) == 'true'">
    <CcsPath Condition="$(CcsPath) == ''">$(CcsInstallDir)</CcsPath>
    <CcsTool Condition="$(CcsTool) == ''">Ccs.exe</CcsTool>
    <CcsCommand>"$(CcsPath)$(CcsTool)"</CcsCommand>
  </PropertyGroup>

  <ItemGroup>
    <!-- default locations where mutators are looked up-->
    <!-- local project subfolder -->
    <CcsMutatorAssemblies Include="CciSharp\CciSharp.*.dll" />
    <!-- solution subfolder -->
    <CcsMutatorAssemblies 
      Condition="$(SolutionDir) != ''" 
      Include="$(SolutionDir)CciSharp\CciSharp.*.dll" />
    <!-- custom user path -->
    <CcsMutatorAssemblies
      Condition="$(CcsMutatorDir) != ''"
      Include="$(CcsMutatorDir)CciSharp.*.dll" />
  </ItemGroup>

  <PropertyGroup>
    <CcsRewriteDependsOn>
      CcsPreRewrite
    </CcsRewriteDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <CcsCommandOptions>$(CcsCommandOptions)</CcsCommandOptions>
  </PropertyGroup>

  <Target
    Name="CcsPreRewrite"
    Condition="$(CcsRewriting) == 'true'">
    <!-- needs to be evaluated after the CopyToTargetDirectory task has run otherwise @(MainAssembly) is empty -->
    <ItemGroup>
      <CcsAssemblies Include="@(MainAssembly)" />
    </ItemGroup>
  </Target>

  <Target
    Name="CcsRewrite"
    Condition="$(CcsRewriting) == 'true' and @(CcsMutatorAssemblies) != ''"
    Inputs="@(CcsAssemblies)"
    Outputs="@(CcsAssemblies->'%(Directory)%(FileName).ccs')"
    DependsOnTargets="$(CcsRewriteDependsOn)">
    <PropertyGroup>
      <CcsFileCommandOptions>$(CcsCommandOptions)</CcsFileCommandOptions>
      <CcsExecCommand>$(CcsCommand) &quot;@(CcsAssemblies)&quot; &quot;@(CcsMutatorAssemblies)&quot;</CcsExecCommand>
    </PropertyGroup>
    <GetFrameworkSdkPath>
      <Output TaskParameter="Path" PropertyName="SdkPath" />
    </GetFrameworkSdkPath>
    <PropertyGroup>
      <PeVerify>&quot;$(SdkPath)bin\peverify.exe&quot;</PeVerify>
    </PropertyGroup>
    <Exec
      Condition="$(CcsVerify) == 'true'"
      Command="$(PeVerify) &quot;@(CcsAssemblies)&quot;" />
    <Exec Command="$(CcsExecCommand)" />
    <Exec
      Condition="$(CcsVerify) == 'true'"
      Command="$(PeVerify) &quot;@(CcsAssemblies)&quot;" />
    <Copy
      SourceFiles="@(CcsAssemblies->'%(RootDir)%(Directory)%(FileName).ccs%(Extension)')"
      DestinationFiles="@(CcsAssemblies)"
      SkipUnchangedFiles="true"/>
    <Copy
      Condition="Exists('@(CcsAssemblies->'%(RootDir)%(Directory)%(FileName).pdb')')"
      SourceFiles="@(CcsAssemblies->'%(RootDir)%(Directory)%(FileName).ccs.pdb')"
      DestinationFiles="@(CcsAssemblies->'%(RootDir)%(Directory)%(FileName).pdb')"
      SkipUnchangedFiles="true"/>
    <Touch Files="
           @(CcsAssemblies);
           @(CcsIntermediateAssemblies);
           " />
  </Target>

  <PropertyGroup>
    <BuildCompiledDependsOn Condition="$(CcsRewriteOnBuildCompiled) == 'true'">
      $(BuildCompiledDependsOn);
      CcsRewrite
    </BuildCompiledDependsOn>
  </PropertyGroup>
  <PropertyGroup>
  <PrepareForRunDependsOn>
      $(PrepareForRunDependsOn);
      CcsRewrite
  </PrepareForRunDependsOn>
  </PropertyGroup>

  <!--=====================================================================
      End Microsoft Ccs 
  ======================================================================-->
</Project>